name: "Release"
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)""npm"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm i
      - name: Build
        run: npm run build
      - id: set_var
        run: |
          content=`cat ./src/manifest.json`
          echo "::set-output name=version::$(echo $content | jq -r '.version')"
      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: dist/firefox  
      - name: "web-ext sign"
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }} 
          channel: listed
          apiKey: ${{ secrets.FIREFOX_API_KEY }}
          apiSecret: ${{ secrets.FIREFOX_API_SECRET }}
          timeout: 900000
      # build for assets
      # change manifest.json version +1

      - name: "change firefox self signed version to ${{ steps.set_var.outputs.version }}.1"
        run: |
          content=`cat ./dist/firefox/manifest.json`
          echo $content | jq ".version = \"${{ steps.set_var.outputs.version }}.1\"" > ./dist/firefox/manifest.json
      - name: "web-ext build for signed version"
        id: web-ext-build-signed
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: dist/firefox
      - name: "web-ext sign version"
        id: web-ext-self-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build-signed.outputs.target }} 
          channel: unlisted
          apiKey: ${{ secrets.FIREFOX_API_KEY }}
          apiSecret: ${{ secrets.FIREFOX_API_SECRET }}
          timeout: 900000
      - name: move dist file to release
        run: |
          mv dist/chrome.zip dist/chrome-immersive_translate-${{ steps.set_var.outputs.version }}.zip
          mv ${{ steps.web-ext-self-sign.outputs.target }} dist/firefox-immersive_translate-${{ steps.set_var.outputs.version }}.xpi
      - name: release assets
        uses: "softprops/action-gh-release@v1"
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          generate_release_notes: true
          body: |
            See [Changelog](https://github.com/immersive-translate/immersive-translate/blob/main/CHANGELOG.md) for more details.
          files: |
            dist/chrome-immersive_translate-${{ steps.set_var.outputs.version }}.zip
            dist/firefox-immersive_translate-${{ steps.set_var.outputs.version }}.xpi
      # - name: Download key.pem from secret CHROME_CRX_PRIVATE_KEY
      #   run: |
      #     echo "${{ secrets.CHROME_CRX_PRIVATE_KEY }}" > dist/chrome/key.pem
      # - name: rezip dist/chrome
      #   run: |
      #     cd dist/chrome
      #     zip -r dist/chrome-store.zip *
      #     cd ../..
      - name: Upload & release to chrome store
        uses: mnao305/chrome-extension-upload@3.0.0
        with:
          file-path: dist/chrome-immersive_translate-${{ steps.set_var.outputs.version }}.zip
          extension-id: bpoadfkcbjbfhfodiogcnhhhpibjhbnh
          client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          refresh-token: ${{ secrets.GOOGLE_REFRESH_TOKEN }}

